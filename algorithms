#include <iostream>
using namespace std;
int main() {
    int result[15];
    for (int k = 0; k < 15; k++) {
        int operation_counter = 0;
        int n;
        cin >> n;
        int** matrix = new int* [n];                //создание матрицы и её заполнение
        for (int i = 0; i < n; i++) {
            matrix[i] = new int[n];
        }
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                matrix[i][j] = 1;
            }
        }
        int* vector = new int[n];                  //создание вектора и его заполнение
        for (int i = 0; i < n; i++) {
            vector[i] = 2;
        }

        for (int i = 0; i < n; i++) {               //перемножаем элементы вектора на элементы матрицы и получаем новые значения в матрице
            for (int j = 0; j < n; j++) {
                matrix[i][j] *= vector[i];
                operation_counter += 2;
            }
        }

        for (int i = 0; i < n; i++) {
            vector[i] = 0;                          //обнуляем элементы вектора для записи новых ответов
        }

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                vector[i] += matrix[i][j];         //записываем в вектор сумму значений строки, которые получились в матрице
            }
        }

        result[k] = operation_counter;
    }

    cout << endl;
    for (int i = 0; i < 15; i++) {
        cout << result[i] << " ";
    }
    cout << endl;
}




#include <iostream>
#include <cstdlib>
#include <ctime>
#include <iomanip>
using namespace std;

int main() {
	////Поиск минимального количества операций
	//srand(time(0));
	//int answers[10];
	//int ind = 0;
	//for (int n = 100; n < 1001; n += 100) {
	//	int counter = 0;
	//	int* array = new int[n];
	//	for (int i = 0; i < n; i++)
	//		array[i] = i;

	//	for (int i = 0; i < n; i++)
	//		for (int j = 0; j < n - 1; j++) {
	//			if (array[j] > array[j + 1]) {
	//				int tmp = array[j];
	//				array[j] = array[j + 1];
	//				array[j + 1] = tmp;
	//				counter += 4;
	//			}
	//			else
	//				counter++;
	//		}
	//	answers[ind] = counter;
	//	ind++;
	//}

	//for (int i = 0; i < ind; i++)
	//	cout << answers[i] << " ";

	////Поиск максимального количества операций
	//srand(time(0));
	//int answers[10];
	//int ind = 0;
	//for (int n = 100; n < 1001; n += 100) {
	//	int counter = 0;
	//	int* array = new int[n];
	//	for (int i = 0; i < n; i++)
	//		array[i] = n - i;

	//	for (int i = 0; i < n; i++)
	//		for (int j = 0; j < n - 1; j++) {
	//			if (array[j] > array[j + 1]) {
	//				int tmp = array[j];
	//				array[j] = array[j + 1];
	//				array[j + 1] = tmp;
	//				counter += 4;
	//			}
	//			else
	//				counter++;
	//		}
	//	answers[ind] = counter;
	//	ind++;
	//}

	//for (int i = 0; i < ind; i++)
	//	cout << answers[i] << " ";


	//Поиск для подсчета операций среднего кол-во

	srand(time(0));
	float answers[10];
	int ind = 0;
	for (int n = 100; n < 1001; n += 100) {
		int counter = 0;
		int* array = new int[n];
		for (int k = 0; k < 1000; k++) {
			for (int i = 0; i < n; i++)
				array[i] = rand();
			for (int i = 0; i < n; i++)
				for (int j = 0; j < n - 1; j++) {
					if (array[j] > array[j + 1]) {
						int tmp = array[j];
						array[j] = array[j + 1];
						array[j + 1] = tmp;
						counter += 4;
					}
					else
						counter++;
				}
		}
		float average = float(counter) / 1000;
		answers[ind] = average;
		ind++;
	}

	for (int i = 0; i < ind; i++)
	{
		cout << fixed << setprecision(2);
		cout << setw(20) << answers[i] << " ";
	}
}
