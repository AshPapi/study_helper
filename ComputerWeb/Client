#include <fstream>
#include <iostream>
#include <string>
#include <thread>
#include <chrono>

using namespace std;

string filename = "C:\\Users\\s0188242\\source\\repos\\data.txt";  
string logFilename = "C:\\Users\\s0188242\\source\\repos\\log.txt"; 
string file_back = "C:\\Users\\s0188242\\source\\repos\\file_back.txt"; 

// очистка file_back.txt перед отправкой новых данных
void clearFileBack() {
    ofstream file(file_back, ios::trunc); // Очищаем файл
    file.close();
}

// ожидание обновления file_back.txt
string waitForServerResponse() {
    string lastResponse = "";

    while (true) {
        this_thread::sleep_for(chrono::milliseconds(500)); // ждем 500 мс перед проверкой

        ifstream file(file_back);
        if (!file) {
            continue; 
        }

        string response;
        getline(file, response, '\0');
        file.close();

        if (!response.empty() && response != lastResponse) {
            lastResponse = response;
            return response;
        }
    }
}

int main() {
    setlocale(LC_ALL, "rus");

    while (true) {
        cout << "\nВведите числа через пробел (или 'exit' для выхода): ";
        string input;
        getline(cin, input);

        if (input == "exit") {
            cout << "Выход..." << endl;
            break;
        }

        clearFileBack(); // очищаем file_back.txt перед отправкой новых данных

        // открываем файл в режиме добавления
        ofstream file(filename, ios::app);
        if (!file) {
            cout << "Ошибка открытия файла!" << endl;
            return 1;
        }
        file << input << ' '; // записываем данные
        file.close();

        //--------------------------------------------------------------//
        ofstream logFile(logFilename, ios::app);
        if (!logFile) {
            cout << "Ошибка открытия файла лога!" << endl;
            return 1;
        }
        logFile << input << endl;
        logFile.close();
        //--------------------------------------------------------------//

        cout << "Данные записаны!" << endl;

        // ожидаем обновления file_back.txt и выводим ответ
        string response = waitForServerResponse();
        cout << "Ответ от сервера:\n" << response << endl;
    }

    return 0;
}
