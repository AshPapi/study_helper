#include <fstream>
#include <iostream>
#include <thread>
#include <chrono>
#include <vector>
#include <string>

using namespace std;

struct Student {
    string name;
    vector<int> grades;
};

Student readStudentFromFile(const string& filename) {
    ifstream file(filename, ios::binary);
    Student student;

    if (!file) {
        cout << "Ошибка открытия бинарного файла!" << endl;
        return student;
    }

    // Читаем длину имени
    size_t nameLength;
    file.read(reinterpret_cast<char*>(&nameLength), sizeof(size_t));
    if (file.eof()) {
        file.close();
        return student;
    }

    // Читаем имя
    char* buffer = new char[nameLength + 1];
    file.read(buffer, nameLength);
    buffer[nameLength] = '\0';
    student.name = string(buffer);
    delete[] buffer;

    // Читаем количество оценок
    size_t gradesSize;
    file.read(reinterpret_cast<char*>(&gradesSize), sizeof(size_t));
    if (file.eof() || gradesSize == 0) {
        file.close();
        return student;
    }

    // Читаем оценки
    student.grades.resize(gradesSize);
    file.read(reinterpret_cast<char*>(student.grades.data()), sizeof(int) * gradesSize);
    file.close();

    return student;
}

double calculateAverage(const vector<int>& grades) {
    if (grades.empty()) return 0.0;
    double sum = 0;
    for (int grade : grades) sum += grade;
    return sum / grades.size();
}

int main() {
    setlocale(LC_ALL, "rus");
    string filename = "C:\\Users\\Admin\\source\\repos\\data.bin";
    string resultFilename = "C:\\Users\\Admin\\source\\repos\\result.txt";

    cout << "Сервер запущен и следит за изменением файла..." << endl;

    while (true) {
        this_thread::sleep_for(chrono::seconds(1)); // Проверка каждую секунду

        Student student = readStudentFromFile(filename);
        if (student.grades.empty()) {
            continue;
        }

        cout << "\nФайл обновлён!" << endl;
        cout << "Студент: " << student.name << endl;

        double avg = calculateAverage(student.grades);
        cout << "Средний балл: " << avg << endl;

        // Записываем результат в файл
        ofstream resultFile(resultFilename);
        if (!resultFile) {
            cout << "Ошибка записи результата!" << endl;
            continue;
        }

        if (avg > 4.5) {
            resultFile << "Студент " << student.name << ": Средний балл " << avg
                << " - Получает стипендию!";
            cout << "Студент получает стипендию!" << endl;
        }
        else {
            resultFile << "Студент " << student.name << ": Средний балл " << avg
                << " - Стипендия не положена.";
            cout << "Стипендия не положена." << endl;
        }
        resultFile.close();
    }

    return 0;
}
