#include <iostream>
#include <string>
#include <winsock2.h>
#include <ws2tcpip.h>
#include <windows.h>
#pragma comment(lib, "ws2_32.lib")
using namespace std;

int main() {
    setlocale(LC_ALL, "rus");
    WSADATA wsaData;
    WSAStartup(MAKEWORD(2, 2), &wsaData);  

    SOCKET sock = socket(AF_INET, SOCK_DGRAM, 0);  // Создание UDP-сокета
    if (sock == INVALID_SOCKET) {
        cerr << "Ошибка создания сокета" << endl;
        WSACleanup();
        return 1;
    }

    sockaddr_in serverAddr{};
    serverAddr.sin_family = AF_INET;
    serverAddr.sin_port = htons(12345);  // Порт для подключения

    // Преобразование IP-адреса в формат, пригодный для сокета
    if (inet_pton(AF_INET, "127.0.0.1", &serverAddr.sin_addr) <= 0) {
        cerr << "Ошибка преобразования IP-адреса" << endl;
        closesocket(sock);
        WSACleanup();
        return 1;
    }

    while (true) {
        string message;
        cout << "Введите сообщение (или 'exit' для выхода): ";
        getline(cin, message);
        if (message == "exit") break;  

        // Отправка сообщения на сервер
        int bytesSent = sendto(sock, message.c_str(), message.size(), 0, (sockaddr*)&serverAddr, sizeof(serverAddr));
        if (bytesSent == SOCKET_ERROR) {
            cerr << "Ошибка отправки данных" << endl;
            continue;
        }

        char buffer[1024] = { 0 };  // Буфер для получения ответа
        sockaddr_in fromAddr{};
        int fromSize = sizeof(fromAddr);

        // Получение ответа от сервера
        int bytesReceived = recvfrom(sock, buffer, sizeof(buffer), 0, (sockaddr*)&fromAddr, &fromSize);
        if (bytesReceived == SOCKET_ERROR) {
            cerr << "Ошибка получения данных" << endl;
            continue;
        }

        cout << "Ответ от сервера: " << buffer << endl;
    }

    closesocket(sock);
    WSACleanup();
    return 0;
}
