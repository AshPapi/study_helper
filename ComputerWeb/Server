#include <fstream>
#include <iostream>
#include <thread>
#include <chrono>
#include <vector>
#include <sstream>

using namespace std;

string filename = "C:\\Users\\s0188242\\source\\repos\\data.txt";  // Файл с данными
string file_back = "C:\\Users\\s0188242\\source\\repos\\file_back.txt"; // Файл для ответа клиенту
string lastContent = "";  // Переменная для хранения последнего содержимого файла

// Функция для чтения чисел из файла
vector<int> readNumbersFromFile(const string& filename) {
    ifstream file(filename);
    vector<int> numbers;
    string content, temp;

    if (!file) {
        cout << "Ошибка открытия файла!" << endl;
        return numbers;
    }

    getline(file, content, '\0');
    file.close();

    if (content == lastContent) {
        return {}; // Если содержимое не изменилось, возвращаем пустой вектор
    }
    lastContent = content; // Обновляем последнее содержимое файла

    stringstream ss(content);
    while (ss >> temp) {
        try {
            numbers.push_back(stoi(temp));
        }
        catch (...) {
            cout << "Ошибка преобразования числа!" << endl;
        }
    }

    return numbers;
}

// Функция вычисления среднего балла
double calculateAverage(const vector<int>& numbers) {
    if (numbers.empty()) return 0.0;
    double sum = 0;
    for (int num : numbers) sum += num;
    return sum / numbers.size();
}

// Функция записи результата в файл file_back.txt
void writeToFileBack(const string& message) {
    ofstream file(file_back, ios::trunc); // Перезаписываем файл
    if (!file) {
        cout << "Ошибка записи в файл file_back.txt!" << endl;
        return;
    }
    file << message;
    file.close();
}

int main() {
    setlocale(LC_ALL, "rus");

    cout << "Сервер работает..." << endl;

    while (true) {
        this_thread::sleep_for(chrono::seconds(1)); // Проверяем каждую секунду

        vector<int> numbers = readNumbersFromFile(filename);
        if (numbers.empty()) {
            continue; // Если нет изменений, продолжаем ожидание
        }

        cout << "\nФайл обновлён!" << endl;
        double avg = calculateAverage(numbers);

        string result = "Средний балл: " + to_string(avg) + "\n";
        if (avg > 4.5) {
            result += "Студент получает стипендию!";
        }
        else {
            result += "Стипендии нет.";
        }

        cout << result << endl;
        writeToFileBack(result); // Записываем результат в file_back.txt
    }

    return 0;
}
