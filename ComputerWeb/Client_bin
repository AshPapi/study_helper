#include <fstream>
#include <iostream>
#include <string>
#include <vector>
#include <sstream>

using namespace std;

int main() {
    setlocale(LC_ALL, "rus");

    string filename = "C:\\Users\\Admin\\source\\repos\\data.bin";  // Бинарный файл для данных
    string logFilename = "C:\\Users\\Admin\\source\\repos\\log.txt"; // Лог-файл

    while (true) {
        cout << "\nВведите числа через пробел (или 'exit' для выхода): ";
        string input;
        getline(cin, input);

        if (input == "exit") {
            break;
        }

        // Парсим введённые числа
        vector<int> numbers;
        stringstream ss(input);
        string temp;
        while (ss >> temp) {
            try {
                numbers.push_back(stoi(temp));
            }
            catch (...) {
                cout << "Ошибка преобразования числа!" << endl;
                continue;
            }
        }

        if (numbers.empty()) {
            cout << "Нет валидных чисел для записи!" << endl;
            continue;
        }

        // Открываем бинарный файл в режиме ДОПИСИ (ios::app мешает бинарной записи, поэтому ios::ate)
        ofstream file(filename, ios::binary | ios::ate | ios::out | ios::in);
        if (!file) {
            cout << "Ошибка открытия бинарного файла!" << endl;
            return 1;
        }

        // Записываем размер новой порции данных
        size_t size = numbers.size();
        file.write(reinterpret_cast<char*>(&size), sizeof(size_t));
        file.write(reinterpret_cast<char*>(numbers.data()), sizeof(int) * numbers.size());
        file.close();

        // Логируем данные в текстовый файл
        ofstream logFile(logFilename, ios::app);
        if (!logFile) {
            return 1;
        }
        logFile << input << endl;
        logFile.close();

        cout << "Данные записаны в бинарный файл!" << endl;

        // Клиент читает данные и получает информацию о стипендии
        ifstream readFile(filename, ios::binary);
        if (!readFile) {
            cout << "Ошибка чтения бинарного файла!" << endl;
            return 1;
        }

        vector<int> allNumbers;
        while (!readFile.eof()) {
            size_t blockSize;
            readFile.read(reinterpret_cast<char*>(&blockSize), sizeof(size_t));
            if (readFile.eof()) break;

            vector<int> block(blockSize);
            readFile.read(reinterpret_cast<char*>(block.data()), sizeof(int) * blockSize);
            allNumbers.insert(allNumbers.end(), block.begin(), block.end());
        }
        readFile.close();

        // Подсчёт среднего балла
        double sum = 0;
        for (int num : allNumbers) sum += num;
        double avg = allNumbers.empty() ? 0 : sum / allNumbers.size();

        cout << "Средний балл: " << avg << endl;
        if (avg > 4.5) {
            cout << "Студент получает стипендию!" << endl;
        }
        else {
            cout << "Стипендия не положена." << endl;
        }
    }

    return 0;
}